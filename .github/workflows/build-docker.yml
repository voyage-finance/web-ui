name: Build
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
      - name: Install buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set envs
        run: |
          export SHORT_SHA=${GITHUB_SHA::7}
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${GITHUB_REF_NAME}-${SHORT_SHA}-${{ github.run_number }}" >> $GITHUB_ENV
          echo IMAGE_TAG="${GITHUB_REF_NAME}-${SHORT_SHA}-${{ github.run_number }}"
      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: voyage-web-ui
        run: |
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker buildx build --push \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            --platform linux/amd64,linux/arm64 \
            -f ./docker/Dockerfile .
